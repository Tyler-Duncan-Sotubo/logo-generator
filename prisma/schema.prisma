// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
    provider = "mongodb"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
    id                       String  @id @default(cuid()) @map("_id")
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String?
    access_token             String?
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String?
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    refresh_token_expires_in Int?

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid()) @map("_id")
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId], name: "idx_session_userId")
}

model User {
    id            String    @id @default(cuid()) @map("_id")
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    credits       Int       @default(1)
    accounts      Account[]
    sessions      Session[]
    logos         Logos[]
    icons         Icons[]
}

model Logos {
    id        String   @id @default(cuid()) @map("_id")
    userId    String
    prompt    String
    createdAt DateTime @default(now())

    user User @relation(fields: [userId], references: [id])

    @@index([userId], name: "idx_logos_userId")
}

model Icons {
    id        String   @id @default(cuid()) @map("_id")
    userId    String
    prompt    String
    createdAt DateTime @default(now())

    user User @relation(fields: [userId], references: [id])

    @@index([userId], name: "idx_icons_userId")
}

model VerificationToken {
    identifier String   @id @map("_id")
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
